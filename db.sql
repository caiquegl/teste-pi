-- MySQL Script generated by MySQL Workbench
-- Tue Apr 28 12:01:45 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Learning_map
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Learning_map
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Learning_map` DEFAULT CHARACTER SET utf8 ;
USE `Learning_map` ;

-- -----------------------------------------------------
-- Table `Learning_map`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Learning_map`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `senha` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `cpf` INT(11) NOT NULL,
  `nome_completo` VARCHAR(45) NOT NULL,
  `vendedor` INT(1) NOT NULL,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Learning_map`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Learning_map`.`endereco` (
  `id_endereco` INT NOT NULL AUTO_INCREMENT,
  `rua` VARCHAR(200) NOT NULL,
  `cep` INT(8) NOT NULL,
  `cidade` VARCHAR(45) NOT NULL,
  `estado` VARCHAR(2) NOT NULL,
  `complemento` VARCHAR(45) NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_endereco`),
  INDEX `fk_endereco_usuarios1_idx` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_endereco_usuarios1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `Learning_map`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Learning_map`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Learning_map`.`produto` (
  `id_produtos` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `valor` TINYINT NOT NULL,
  `descricao` VARCHAR(250) NOT NULL,
  `foto` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_produtos`),
  CONSTRAINT `fk_produtos_usuarios1`
    FOREIGN KEY (`id_produtos`)
    REFERENCES `Learning_map`.`usuario` (`vendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Learning_map`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Learning_map`.`pedido` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `id_endereco` INT NOT NULL,
  `pedido_status` VARCHAR(45) NOT NULL,
  `data_pedido` DATE NOT NULL,
  PRIMARY KEY (`id_pedido`),
  INDEX `fk_pedidos_endereco1_idx` (`id_endereco` ASC) VISIBLE,
  CONSTRAINT `fk_pedidos_endereco1`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `Learning_map`.`endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Learning_map`.`produtos_has_pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Learning_map`.`produtos_has_pedidos` (
  `produtos_id_produtos` INT NOT NULL,
  `pedidos_id_pedidos` INT NOT NULL,
  PRIMARY KEY (`produtos_id_produtos`, `pedidos_id_pedidos`),
  INDEX `fk_produtos_has_pedidos_pedidos1_idx` (`pedidos_id_pedidos` ASC) VISIBLE,
  INDEX `fk_produtos_has_pedidos_produtos1_idx` (`produtos_id_produtos` ASC) VISIBLE,
  CONSTRAINT `fk_produtos_has_pedidos_produtos1`
    FOREIGN KEY (`produtos_id_produtos`)
    REFERENCES `Learning_map`.`produto` (`id_produtos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produtos_has_pedidos_pedidos1`
    FOREIGN KEY (`pedidos_id_pedidos`)
    REFERENCES `Learning_map`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
